minimum-vagga: v0.7.0-1
containers:
  pip-freeze:
    setup:
      - !Alpine v3.4
      - &django-build !BuildDeps
        - postgresql-dev
      - !Py3Install
        - pip
        - 'Django >=1.9,<1.10'
        - 'gunicorn >=19.5,<19.6'
        - 'whitenoise >=3.2,<3.3'
        - 'django-environ >=0.4,<0.5'
        - 'psycopg2 >=2.6,<2.7'
      - !Sh pip freeze > requirements/requirements.txt
  django:
    setup:
      - !Alpine v3.4
      - *django-build
      - !PipConfig
        dependencies: true
      - !Install
        - libpq
      - !Py3Requirements requirements/requirements.txt
    environ:
      DATABASE_URL: postgresql://vagga:vagga@127.0.0.1:5433/mainDB
    environ-file: /work/blog/.env
  postgres:
    setup:
    - !Ubuntu xenial
    - !EnsureDir /data
    - !Sh |
        addgroup --system --gid 200 postgres
        adduser --uid 200 --system --home /data --no-create-home \
            --shell /bin/bash --group --gecos "PostgreSQL administrator" \
            postgres
    - !Install [postgresql-9.5]
    environ:
      PGDATA: /data
      PG_PORT: 5433
      PG_DB: mainDB
      PG_USER: vagga
      PG_PASSWORD: vagga
      PG_BIN: /usr/lib/postgresql/9.5/bin
    volumes:
      /data: !Persistent
        name: postgres
        owner-uid: 200
        owner-gid: 200
        init-command: _pg-init
      /run: !Tmpfs
        subdirs:
          postgresql: { mode: 0o777 }
  test:
    setup:
      - !Ubuntu xenial
      - !PipConfig
        dependencies: true
      - !Install [git]
      - !Depends .pre-commit-config.yaml
      - !Py3Requirements requirements/requirements-test.txt
      - !Py3Install [setuptools]
      - !Sh HOME=/root pre-commit install-hooks
commands:
  _pg-init: !Command
    description: Init postgres database
    container: postgres
    user-id: 200
    group-id: 200
    run: |
      set -ex
      ls -la /data
      $PG_BIN/pg_ctl initdb
      $PG_BIN/pg_ctl -w -o '-F --port=$PG_PORT -k $PGDATA' start
      $PG_BIN/createuser -h 127.0.0.1 -p $PG_PORT $PG_USER
      $PG_BIN/createdb -h 127.0.0.1 -p $PG_PORT $PG_DB -O $PG_USER
      $PG_BIN/psql -h 127.0.0.1 -p $PG_PORT -c "ALTER ROLE $PG_USER WITH ENCRYPTED PASSWORD '$PG_PASSWORD';"
      $PG_BIN/pg_ctl stop
  run-app: &run-app !Command
        container: django
        run: |
            python3 manage.py migrate
            python3 manage.py runserver --insecure
  run-db: &run-db !Command
        container: postgres
        user-id: 200
        group-id: 200
        run: exec $PG_BIN/postgres -F --port=$PG_PORT -k $PGDATA
  manage.py: !Command
    description: Shortcut to manage.py
    container: django
    run: [python3, manage.py]
  run: !Supervise
    description: Start the django development server using Postgres database
    children:
      app: *run-app
      db: *run-db
  test: !Command
    description: Run tests
    container: test
    run: python3 manage.py test
  lint: !Command
    description: Run linters
    container: test
    run: pre-commit run --all-files
  pre-commit: !Command
    description: Run pre-commit
    container: test
    run: [pre-commit]
